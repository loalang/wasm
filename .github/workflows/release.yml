name: Release

on: [push]

jobs:
  build-scripts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: version
        uses: ./.github/actions/version

      - name: Install dependencies
        uses: docker://node:12
        with:
          args: yarn --pure-lockfile

      - name: Build scripts
        uses: ./.github/actions/wasm-pack
        env:
          ASSET_PATH: https://cdn.loalang.xyz/${{ steps.version.outputs.version }}/
        with:
          run: |
            rustup default nightly
            yarn webpack --mode production

      - name: Upload scripts
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: loalang
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          CLI: gsutil
          BUCKET_PATH: gs://cdn.loalang.xyz/${{ steps.version.outputs.version }}/
        with:
          args: -m cp -r dist/* $BUCKET_PATH

      - name: Set Content-Type to application/wasm
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: loalang
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          CLI: gsutil
          BUCKET_PATH: gs://cdn.loalang.xyz/${{ steps.version.outputs.version }}/
        with:
          args: 'setmeta -h "Content-Type: application/wasm" ${BUCKET_PATH}*.wasm'

      - name: Set Cache-Control header
        uses: actions-hub/gcloud@master
        env:
          PROJECT_ID: loalang
          APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          CLI: gsutil
          BUCKET_PATH: gs://cdn.loalang.xyz/${{ steps.version.outputs.version }}/
        with:
          args: 'setmeta -h "Cache-Control: public, max-age=31536000" ${BUCKET_PATH}*'

  build-libs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        id: version
        uses: ./.github/actions/version

      - name: Build lib
        uses: ./.github/actions/wasm-pack
        with:
          run: |
            cd loa
            rustup default nightly
            wasm-pack build --release --out-dir gen --scope loalang
            cd gen
            yarn version --no-git-tag-version --new-version ${{ steps.version.outputs.version }}
            cp ../src/lib.d.ts ./loa.d.ts

      - name: Authenticate to NPM
        run: echo '_authToken=${{ secrets.NPM_DEPLOY_KEY }}' > loa/gen/.yarnrc

      - name: Deploy lib
        uses: docker://node:12
        env:
          VERSION: ${{ steps.version.outputs.version }}
        with:
          args: bash -c 'cd loa/gen && yarn publish --no-git-tag-version --new-version ${VERSION} --access public'
